
syntax = "proto3";

package interstellarpbapigarble;

option java_multiple_files = true;
option java_package = "com.interstellar.api_garble";
option java_outer_classname = "InterstellarApiGarbleProto";

import "api_garble/garble_routes.proto";

// Using an independent top-level well_knowns.proto does not work...
// https://github.com/stepancheg/rust-protobuf/issues/409
// same as google.protobuf.Empty, but directly included to avoid well-knowns
// [well-knowns are a pain to use with Android]
message Empty {}

service GarbleApi {
  // Garble a circuit .skcd from IPFS, and store the result in IPFS
  rpc GarbleIpfs(GarbleIpfsRequest) returns (GarbleIpfsReply) {}

  // Garble then Strip a DISPLAY .skcd, and store the result in IPFS
  // This works ONLY for the "display circuits"
  rpc GarbleAndStripIpfs(GarbleAndStripIpfsRequest) returns (GarbleAndStripIpfsReply) {}
}
